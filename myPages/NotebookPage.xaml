<UserControl x:Class="myStore.myPages.NotebookPage"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:root="clr-namespace:myStore"
        mc:Ignorable="d"
        xmlns:controls="clr-namespace:myStore.src.controls.ScrollViewer"
        xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding"
        xmlns:converters="clr-namespace:myStore.converters"
        xmlns:bp="clr-namespace:BlackPearl.Controls.CoreLibrary;assembly=BlackPearl.Controls.CoreLibrary"
        DataContext="{Binding RelativeSource={RelativeSource Self}}" x:Name="LayoutRoot">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/src/styles/ContolsStyle.xaml"/>

                <ResourceDictionary>
                    <ContextMenu x:Key="image_context_nenu">
                        <MenuItem Header="select in FileExplorer" Command="{Binding SelectImageInFileExplorerCommand}">
                            <MenuItem.Icon>
                                <Image Source="pack://application:,,,/src/imgs/search.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="cut" Command="{Binding CutImageCommand}">
                            <MenuItem.Icon>
                                <Image Source="pack://application:,,,/src/imgs/cut.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="copy" Command="{Binding CopyImageCommand}">
                            <MenuItem.Icon>
                                <Image Source="pack://application:,,,/src/imgs/copy.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="paste" Command="{Binding PasteImageFileCommand}">
                            <MenuItem.Icon>
                                <Image Source="pack://application:,,,/src/imgs/paste.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="clear" Command="{Binding ClearImageCommand}">
                            <MenuItem.Icon>
                                <Image Source="pack://application:,,,/src/imgs/clear.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>

                    <root:myLookUpContract x:Key="mluContract"/>
                    <converters:LessThen x:Key="LessThenConverter"/>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Canvas PreviewMouseWheel="MouseWheel">
        <Canvas.Resources>
            <Style TargetType="Label" x:Key="label_style">
                <Setter Property="Canvas.Right" Value="40"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="FontSize" Value="30"/>
            </Style>
            <Style TargetType="WrapPanel">
                <Setter Property="Orientation" Value="Horizontal"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>

                <Style.Resources>
                    <Style TargetType="WrapPanel">
                        <Setter Property="MaxHeight" Value="300"/>
                        <Setter Property="Orientation" Value="Vertical"/>
                    </Style>
                </Style.Resources>
            </Style>
            <Style TargetType="GroupBox" BasedOn="{StaticResource SoftEdgesStyle}">
                <Setter Property="MinWidth" Value="200"/>

                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="Margin" Value="20,0,20,50"/>
                <Setter Property="Background" Value="LightBlue"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HeaderTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Label Content="{Binding}" FontWeight="Bold" FontSize="16">
                                <Label.Style>
                                    <Style TargetType="Label">
                                        <Setter Property="Margin" Value="0,-20,0,0"/>

                                        <Style.Triggers>
                                            <Trigger Property="Content" Value="">
                                                <Setter Property="Margin" Value="0,0,0,0"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Resources>
                    <Style TargetType="WrapPanel">
                        <Setter Property="MaxHeight" Value="200"/>
                        <Setter Property="Orientation" Value="Vertical"/>
                    </Style>

                    <Style TargetType="GroupBox">
                        <Setter Property="Width" Value="250"/>
                        <Setter Property="BorderThickness" Value="0"/>

                        <Style.Resources>
                            <Style TargetType="StackPanel">
                                <Style.Resources>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding isEditable, ElementName=LayoutRoot}" Value="false">
                                                <Setter Property="Padding" Value="130,0,0,0"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                    <Style TargetType="Slider">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding isEditable, ElementName=LayoutRoot}" Value="false">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Style.Resources>
                            </Style>
                        </Style.Resources>

                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ActualHeight, RelativeSource={RelativeSource self}, Converter={StaticResource LessThenConverter}, ConverterParameter=30}" Value="true"/>
                                    <Condition Binding="{Binding isEditable, ElementName=LayoutRoot}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="ComboBox">
                        <Setter Property="IsEnabled" Value="{Binding isEditable, ElementName=LayoutRoot}"/>

                        <Style.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="SelectedValue" Value="{x:Null}"/>
                                    <Condition Property="IsEnabled" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </MultiTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="CheckBox">
                        <Setter Property="IsEnabled" Value="{Binding isEditable, ElementName=LayoutRoot}"/>

                        <Style.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="{x:Null}"/>
                                    <Condition Property="IsEnabled" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </MultiTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="{x:Type bp:MultiSelectCombobox}" BasedOn="{StaticResource SoftEdgesStyle}">
                        <Setter Property="IsEnabled" Value="{Binding isEditable, ElementName=LayoutRoot}"/>

                        <Style.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="SelectedItems" Value="{x:Null}"/>
                                    <Condition Property="IsEnabled" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </MultiTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="TextBox" BasedOn="{StaticResource SoftEdgesStyle}">
                        <Setter Property="IsEnabled" Value="{Binding isEditable, ElementName=LayoutRoot}"/>

                        <Setter Property="Margin" Value="10,0,10,10"/>
                        <Setter Property="TextWrapping" Value="Wrap"/>
                        <Setter Property="Padding" Value="5,5,5,5"/>

                        <Style.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                    <Condition Property="IsEnabled" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </MultiTrigger>

                            <Trigger Property="Text" Value="">
                                <Setter Property="Background" Value="LightGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="Label">
                        <Setter Property="Margin" Value="15,5,15,0"/>
                        <Setter Property="FontWeight" Value="Medium"/>
                        <Setter Property="FontStyle" Value="Italic"/>
                    </Style>
                </Style.Resources>

                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding ActualHeight, RelativeSource={RelativeSource self}, Converter={StaticResource LessThenConverter}, ConverterParameter=30}" Value="true"/>
                            <Condition Binding="{Binding isEditable, ElementName=LayoutRoot}" Value="false"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
        </Canvas.Resources>

        <controls:SmoothScrollViewer
            x:Name="scrollable_area" ScrollChanged="scrollable_area_ScrollChanged"
            Width="{Binding ElementName=LayoutRoot, Path=ActualWidth}"
            Height="{Binding ElementName=LayoutRoot, Path=ActualHeight}"
            CanContentScroll="False">
            <StackPanel>
                <Rectangle Height="300"/>

                <StackPanel Name="spec_section">
                    <Rectangle Height="40"/>
                    <WrapPanel DataContext="{Binding notebook}">
                        <GroupBox>
                            <WrapPanel Height="100" Orientation="Vertical">
                                <GroupBox Header="price">
                                    <TextBox Text="{Binding price, UpdateSourceTrigger=PropertyChanged}" Name="price"/>
                                </GroupBox>

                                <GroupBox Header="name">
                                    <TextBox Text="{Binding name, UpdateSourceTrigger=PropertyChanged}" Name="name"/>
                                </GroupBox>
                            </WrapPanel>
                        </GroupBox>

                        <GroupBox Header="display">
                            <WrapPanel>
                                <GroupBox Header="display_max_frequency_hz">
                                    <TextBox Text="{Binding display_max_frequency_hz, UpdateSourceTrigger=PropertyChanged}" Name="display_max_frequency_hz"/>
                                </GroupBox>

                                <GroupBox Header="display_diagonal">
                                    <TextBox Text="{Binding display_diagonal, UpdateSourceTrigger=PropertyChanged}" Name="display_diagonal"/>
                                </GroupBox>

                                <GroupBox Header="display_resolution">
                                    <TextBox Text="{Binding display_resolution, UpdateSourceTrigger=PropertyChanged}" Name="display_resolution"/>
                                </GroupBox>

                                <GroupBox Header="display_technology">
                                    <TextBox Text="{Binding display_technology, UpdateSourceTrigger=PropertyChanged}" Name="display_technology"/>
                                </GroupBox>

                                <GroupBox Header="display_surface">
                                    <TextBox Text="{Binding display_surface, UpdateSourceTrigger=PropertyChanged}" Name="display_surface"/>
                                </GroupBox>

                                <GroupBox Header="display_screen_backlight_type">
                                    <TextBox Text="{Binding display_screen_backlight_type, UpdateSourceTrigger=PropertyChanged}" Name="display_screen_backlight_type"/>
                                </GroupBox>

                                <GroupBox Header="display_brightness">
                                    <TextBox Text="{Binding display_brightness, UpdateSourceTrigger=PropertyChanged}" Name="display_brightness"/>
                                </GroupBox>
                            </WrapPanel>
                        </GroupBox>

                        <WrapPanel>
                            <GroupBox Header="cpu">
                                <ComboBox DisplayMemberPath="processor" SelectedValuePath="cpu_id"
                                        SelectedValue="{Binding cpu_id, UpdateSourceTrigger=PropertyChanged}"
                                        ItemsSource="{Binding cpu_list, ElementName=LayoutRoot, UpdateSourceTrigger=PropertyChanged}"/>
                            </GroupBox>

                            <GroupBox Header="gpu">
                                <ComboBox SelectedValue="{Binding gpu_id, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="gpu_id"
                                        ItemsSource="{Binding gpu_list, ElementName=LayoutRoot, UpdateSourceTrigger=PropertyChanged}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding video_adapter}" Margin="5,0,0,0">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding video_adapter}" Value="{x:Null}">
                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>

                                                <TextBlock Text="{Binding video_card}" Margin="5,0,0,0">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding video_card}" Value="{x:Null}">
                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>

                                                <TextBlock Text="{Binding video_memory_type}" Margin="5,0,0,0">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding video_memory_type}" Value="{x:Null}">
                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>

                                                <TextBlock Margin="5,0,0,0">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding video_memory_size}" Value="{x:Null}">
                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>

                                                    <TextBlock.Inlines>
                                                        <Run Text="{Binding video_memory_size}"/>
                                                        <Run Text="Мб "/>
                                                    </TextBlock.Inlines>
                                                </TextBlock>

                                                <TextBlock Margin="5,0,0,0">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding num_of_cores}" Value="{x:Null}">
                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>

                                                    <TextBlock.Inlines>
                                                        <Run Text="{Binding num_of_cores}"/>
                                                        <Run Text="ядер"/>
                                                    </TextBlock.Inlines>
                                                </TextBlock>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </GroupBox>
                        </WrapPanel>

                        <GroupBox Header="memory">
                            <WrapPanel>
                                <GroupBox Header="memory_drive_type">
                                    <TextBox Text="{Binding memory_drive_type, UpdateSourceTrigger=PropertyChanged}" Name="memory_drive_type"/>
                                </GroupBox>

                                <GroupBox Header="memory_ram_type">
                                    <TextBox Text="{Binding memory_ram_type, UpdateSourceTrigger=PropertyChanged}" Name="memory_ram_type"/>
                                </GroupBox>

                                <GroupBox Header="memory_ram_mb">
                                    <TextBox Text="{Binding memory_ram_mb, UpdateSourceTrigger=PropertyChanged}" Name="memory_ram_mb"/>
                                </GroupBox>

                                <GroupBox Header="memory_max_ram_gb">
                                    <TextBox Text="{Binding memory_max_ram_gb, UpdateSourceTrigger=PropertyChanged}" Name="memory_max_ram_gb"/>
                                </GroupBox>

                                <GroupBox Header="memory_amount_of_ram_slots">
                                    <TextBox Text="{Binding memory_amount_of_ram_slots, UpdateSourceTrigger=PropertyChanged}" Name="memory_amount_of_ram_slots"/>
                                </GroupBox>

                                <GroupBox Header="memory_ssd_capacity_gb">
                                    <TextBox Text="{Binding memory_ssd_capacity_gb, UpdateSourceTrigger=PropertyChanged}" Name="memory_ssd_capacity_gb"/>
                                </GroupBox>

                                <GroupBox Header="memory_ram_frequency_mhz">
                                    <TextBox Text="{Binding memory_ram_frequency_mhz, UpdateSourceTrigger=PropertyChanged}" Name="memory_ram_frequency_mhz"/>
                                </GroupBox>

                                <GroupBox Header="memory_emmc_capacity_gb">
                                    <TextBox Text="{Binding memory_emmc_capacity_gb, UpdateSourceTrigger=PropertyChanged}" Name="memory_emmc_capacity_gb"/>
                                </GroupBox>

                                <GroupBox Header="memory_hdd_capacity_gb">
                                    <TextBox Text="{Binding memory_hdd_capacity_gb, UpdateSourceTrigger=PropertyChanged}" Name="memory_hdd_capacity_gb"/>
                                </GroupBox>
                            </WrapPanel>
                        </GroupBox>

                        <WrapPanel>
                            <GroupBox Header="audio">
                                <WrapPanel>
                                    <CheckBox IsChecked="{Binding audio_embedded_speaker, UpdateSourceTrigger=PropertyChanged}" Content="audio_embedded_speaker" Name="audio_embedded_speaker"/>

                                    <CheckBox IsChecked="{Binding audio_embedded_microphone, UpdateSourceTrigger=PropertyChanged}" Content="audio_embedded_microphone" Name="audio_embedded_microphone"/>
                                </WrapPanel>
                            </GroupBox>

                            <GroupBox Header="case">
                                <WrapPanel>
                                    <CheckBox IsChecked="{Binding case_touch_id, UpdateSourceTrigger=PropertyChanged}" Content="case_touch_id" Name="case_touch_id"/>

                                    <GroupBox Header="case_camera">
                                        <TextBox Text="{Binding case_camera, UpdateSourceTrigger=PropertyChanged}" Name="case_camera"/>
                                    </GroupBox>

                                    <GroupBox Header="case_material">
                                        <TextBox Text="{Binding case_material, UpdateSourceTrigger=PropertyChanged}" Name="case_material"/>
                                    </GroupBox>
                                </WrapPanel>
                            </GroupBox>

                            <GroupBox Header="keyboard">
                                <WrapPanel>
                                    <GroupBox Header="keyboard_layout">
                                        <TextBox Text="{Binding keyboard_layout, UpdateSourceTrigger=PropertyChanged}" Name="keyboard_layout"/>
                                    </GroupBox>

                                    <CheckBox IsChecked="{Binding keyboard_backlit, UpdateSourceTrigger=PropertyChanged}" Content="keyboard_backlit" Name="keyboard_backlit"/>
                                </WrapPanel>
                            </GroupBox>
                        </WrapPanel>

                        <GroupBox Header="interfaces">
                            <WrapPanel>
                                <GroupBox Header="interfaces_external_usb32">
                                    <TextBox Text="{Binding interfaces_external_usb32, UpdateSourceTrigger=PropertyChanged}" Name="interfaces_external_usb32"/>
                                </GroupBox>

                                <GroupBox Header="interfaces_usb_ports">
                                    <TextBox Text="{Binding interfaces_usb_ports, UpdateSourceTrigger=PropertyChanged}" Name="interfaces_usb_ports"/>
                                </GroupBox>

                                <GroupBox Header="interfaces_usb20">
                                    <TextBox Text="{Binding interfaces_usb20, UpdateSourceTrigger=PropertyChanged}" Name="interfaces_usb20"/>
                                </GroupBox>

                                <GroupBox Header="interfaces_usb30">
                                    <TextBox Text="{Binding interfaces_usb30, UpdateSourceTrigger=PropertyChanged}" Name="interfaces_usb30"/>
                                </GroupBox>

                                <GroupBox Header="interfaces_usb_type_c">
                                    <TextBox Text="{Binding interfaces_usb_type_c, UpdateSourceTrigger=PropertyChanged}" Name="interfaces_usb_type_c"/>
                                </GroupBox>

                                <GroupBox Header="interfaces_hdmi_port">
                                    <TextBox Text="{Binding interfaces_hdmi_port, UpdateSourceTrigger=PropertyChanged}" Name="interfaces_hdmi_port"/>
                                </GroupBox>

                                <GroupBox Header="interfaces_rj45">
                                    <TextBox Text="{Binding interfaces_rj45, UpdateSourceTrigger=PropertyChanged}" Name="interfaces_rj45"/>
                                </GroupBox>

                                <GroupBox Header="interfaces_bluetooth">
                                    <TextBox Text="{Binding interfaces_bluetooth, UpdateSourceTrigger=PropertyChanged}" Name="interfaces_bluetooth"/>
                                </GroupBox>

                                <GroupBox Header="interfaces_wifi">
                                    <bp:MultiSelectCombobox
                                    ItemSource="{Binding List_interfaces_wifi, ElementName=LayoutRoot}"
                                    SelectedItems="{Binding interfaces_wifi}" ItemSeparator=";"
                                    LookUpContract="{StaticResource mluContract}" Name="interfaces_wifi"/>
                                </GroupBox>

                                <GroupBox Header="interfaces_headphone_microphone_jack">
                                    <TextBox Text="{Binding interfaces_headphone_microphone_jack, UpdateSourceTrigger=PropertyChanged}" Name="interfaces_headphone_microphone_jack"/>
                                </GroupBox>

                                <GroupBox Header="interfaces_memory_cards">
                                    <bp:MultiSelectCombobox
                                    ItemSource="{Binding List_interfaces_memory_cards, ElementName=LayoutRoot}"
                                    SelectedItems="{Binding interfaces_memory_cards}" ItemSeparator=";"
                                    LookUpContract="{StaticResource mluContract}" Name="interfaces_memory_cards"/>
                                </GroupBox>

                                <CheckBox IsChecked="{Binding interfaces_embedded_card_reader, UpdateSourceTrigger=PropertyChanged}" Content="interfaces_embedded_card_reader" Name="interfaces_embedded_card_reader"/>

                                <CheckBox IsChecked="{Binding interfaces_thunderbolt, UpdateSourceTrigger=PropertyChanged}" Content="interfaces_thunderbolt" Name="interfaces_thunderbolt"/>

                                <GroupBox Header="interfaces_thunderbolt3_usb_type_c">
                                    <TextBox Text="{Binding interfaces_thunderbolt3_usb_type_c, UpdateSourceTrigger=PropertyChanged}" Name="interfaces_thunderbolt3_usb_type_c"/>
                                </GroupBox>
                            </WrapPanel>
                        </GroupBox>

                        <GroupBox Header="battery">
                            <WrapPanel>
                                <GroupBox Header="battery_browsing_internet_wirelessly_h">
                                    <TextBox Text="{Binding battery_browsing_internet_wirelessly_h, UpdateSourceTrigger=PropertyChanged}" Name="battery_browsing_internet_wirelessly_h"/>
                                </GroupBox>

                                <GroupBox Header="battery_playing_movies_in_itunes_app_h">
                                    <TextBox Text="{Binding battery_playing_movies_in_itunes_app_h, UpdateSourceTrigger=PropertyChanged}" Name="battery_playing_movies_in_itunes_app_h"/>
                                </GroupBox>

                                <GroupBox Header="battery_battery_type">
                                    <TextBox Text="{Binding battery_battery_type, UpdateSourceTrigger=PropertyChanged}" Name="battery_battery_type"/>
                                </GroupBox>

                                <GroupBox Header="battery_cells_count">
                                    <TextBox Text="{Binding battery_cells_count, UpdateSourceTrigger=PropertyChanged}" Name="battery_cells_count"/>
                                </GroupBox>

                                <GroupBox Header="battery_capacity_wph">
                                    <TextBox Text="{Binding battery_capacity_wph, UpdateSourceTrigger=PropertyChanged}" Name="battery_capacity_wph"/>
                                </GroupBox>

                                <GroupBox Header="battery_capacity_mah">
                                    <TextBox Text="{Binding battery_capacity_mah, UpdateSourceTrigger=PropertyChanged}" Name="battery_capacity_mah"/>
                                </GroupBox>

                                <GroupBox Header="battery_voltage">
                                    <TextBox Text="{Binding battery_voltage, UpdateSourceTrigger=PropertyChanged}" Name="battery_voltage"/>
                                </GroupBox>

                                <GroupBox Header="battery_work_duration">
                                    <TextBox Text="{Binding battery_work_duration, UpdateSourceTrigger=PropertyChanged}" Name="battery_work_duration"/>
                                </GroupBox>
                            </WrapPanel>
                        </GroupBox>

                        <GroupBox Header="dimensions">
                            <WrapPanel>
                                <GroupBox Header="dimensions_height">
                                    <TextBox Text="{Binding dimensions_height, UpdateSourceTrigger=PropertyChanged}" Name="dimensions_height"/>
                                </GroupBox>

                                <GroupBox Header="dimensions_width">
                                    <TextBox Text="{Binding dimensions_width, UpdateSourceTrigger=PropertyChanged}" Name="dimensions_width"/>
                                </GroupBox>

                                <GroupBox Header="dimensions_thickness">
                                    <TextBox Text="{Binding dimensions_thickness, UpdateSourceTrigger=PropertyChanged}" Name="dimensions_thickness"/>
                                </GroupBox>

                                <GroupBox Header="dimensions_weight">
                                    <TextBox Text="{Binding dimensions_weight, UpdateSourceTrigger=PropertyChanged}" Name="dimensions_weight"/>
                                </GroupBox>
                            </WrapPanel>
                        </GroupBox>

                        <GroupBox Header="other">
                            <WrapPanel>
                                <GroupBox Header="other_producer_code">
                                    <TextBox Text="{Binding other_producer_code, UpdateSourceTrigger=PropertyChanged}" Name="other_producer_code"/>
                                </GroupBox>

                                <GroupBox Header="other_producer_id">
                                    <ComboBox SelectedValuePath="producer_id" Name="other_producer_id"
                                                DisplayMemberPath="name"
                                                SelectedValue="{Binding other_producer_id, UpdateSourceTrigger=PropertyChanged}"
                                                ItemsSource="{Binding producer_list, ElementName=LayoutRoot, UpdateSourceTrigger=PropertyChanged}"/>
                                </GroupBox>

                                <GroupBox Header="other_guarantee_period">
                                    <TextBox Text="{Binding other_guarantee_period, UpdateSourceTrigger=PropertyChanged}" Name="other_guarantee_period"/>
                                </GroupBox>
                            </WrapPanel>
                        </GroupBox>

                        <GroupBox Header="software">
                            <GroupBox Header="software_os_id">
                                <ComboBox SelectedValuePath="os_id" Name="software_os_id"
                                                DisplayMemberPath="name"
                                                SelectedValue="{Binding software_os_id}"
                                                ItemsSource="{Binding os_list, ElementName=LayoutRoot, UpdateSourceTrigger=PropertyChanged}"/>
                            </GroupBox>
                        </GroupBox>
                    </WrapPanel>
                </StackPanel>

                <StackPanel Name="comms_section">
                    <Button Command="{Binding CreateCommentCommand}" Style="{StaticResource On_Edition_Button}">
                        <Image Source="pack://application:,,,/src/imgs/add.png"/>
                    </Button>
                    <Rectangle Height="40"/>
                    
                    <ItemsControl ItemsSource="{Binding new_comments}" HorizontalAlignment="Center" ScrollViewer.VerticalScrollBarVisibility="Visible">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <GroupBox MaxWidth="400">
                                    <StackPanel>
                                        <Button Command="{Binding CancelCommentCreatingCommand, ElementName=LayoutRoot}" CommandParameter="{Binding}"
                                            Style="{StaticResource On_Edition_Button}" HorizontalAlignment="Right" Width="30" Height="30">
                                            <Image Source="pack://application:,,,/src/imgs/remove.png"/>
                                        </Button>

                                        <GroupBox Header="plus" Width="Auto">
                                            <TextBox Text="{Binding plus_text, UpdateSourceTrigger=PropertyChanged}"/>
                                        </GroupBox>

                                        <GroupBox Header="minus" Width="Auto">
                                            <TextBox Text="{Binding minus_text, UpdateSourceTrigger=PropertyChanged}"/>
                                        </GroupBox>

                                        <GroupBox Header="review" Width="Auto">
                                            <TextBox Text="{Binding review_text, UpdateSourceTrigger=PropertyChanged}"/>
                                        </GroupBox>

                                        <GroupBox Header="screen_rate">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding screen_rate}"/>
                                                <Slider Value="{Binding screen_rate, UpdateSourceTrigger=PropertyChanged}"
                                                    Minimum="0" Maximum="10" Width="200"/>
                                            </StackPanel>
                                        </GroupBox>
                                        <GroupBox Header="power_rate">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding power_rate}"/>
                                                <Slider Value="{Binding power_rate, UpdateSourceTrigger=PropertyChanged}"
                                                    Minimum="0" Maximum="10" Width="200"/>
                                            </StackPanel>
                                        </GroupBox>
                                        <GroupBox Header="work_duration_rate">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding work_duration_rate}"/>
                                                <Slider Value="{Binding work_duration_rate, UpdateSourceTrigger=PropertyChanged}"
                                                    Minimum="0" Maximum="10" Width="200"/>
                                            </StackPanel>
                                        </GroupBox>
                                    </StackPanel>
                                </GroupBox>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                    <ItemsControl ItemsSource="{Binding comments}" HorizontalAlignment="Center">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <GroupBox MaxWidth="400">
                                    <Border>
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsPreparedForRemoving}" Value="True">
                                                        <Setter Property="BorderBrush" Value="#55F00000"/>
                                                        <Setter Property="BorderThickness" Value="3"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>

                                        <StackPanel>
                                            <Button Command="{Binding RemoveCommentCommand, ElementName=LayoutRoot}" CommandParameter="{Binding}"
                                            HorizontalAlignment="Right" Width="30" Height="30">
                                                <Button.Style>
                                                    <Style TargetType="Button" BasedOn="{StaticResource On_Edition_Button}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsPreparedForRemoving}" Value="True">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>

                                                <Image Source="pack://application:,,,/src/imgs/remove.png"/>
                                            </Button>
                                            <Button Command="{Binding CancelCommentRemovingCommand, ElementName=LayoutRoot}" CommandParameter="{Binding}"
                                            HorizontalAlignment="Right" Width="30" Height="30">
                                                <Button.Style>
                                                    <Style TargetType="Button" BasedOn="{StaticResource On_Edition_Button}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsPreparedForRemoving}" Value="False">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>

                                                <Image Source="pack://application:,,,/src/imgs/add.png"/>
                                            </Button>

                                            <GroupBox Header="plus" Width="Auto">
                                                <TextBox Text="{Binding obj.plus_text, UpdateSourceTrigger=PropertyChanged}" Name="plus_text"/>
                                            </GroupBox>

                                            <GroupBox Header="minus" Width="Auto">
                                                <TextBox Text="{Binding obj.minus_text, UpdateSourceTrigger=PropertyChanged}" Name="minus_text"/>
                                            </GroupBox>

                                            <GroupBox Header="review" Width="Auto">
                                                <TextBox Text="{Binding obj.review_text, UpdateSourceTrigger=PropertyChanged}" Name="review_text"/>
                                            </GroupBox>

                                            <GroupBox Header="screen_rate">
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding obj.screen_rate}"/>
                                                    <Slider Value="{Binding obj.screen_rate, UpdateSourceTrigger=PropertyChanged}"
                                                    Minimum="0" Maximum="10" Width="200" Name="screen_rate"/>
                                                </StackPanel>
                                            </GroupBox>
                                            <GroupBox Header="power_rate">
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding obj.power_rate}"/>
                                                    <Slider Value="{Binding obj.power_rate, UpdateSourceTrigger=PropertyChanged}"
                                                    Minimum="0" Maximum="10" Width="200" Name="power_rate"/>
                                                </StackPanel>
                                            </GroupBox>
                                            <GroupBox Header="work_duration_rate">
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding obj.work_duration_rate}"/>
                                                    <Slider Value="{Binding obj.work_duration_rate, UpdateSourceTrigger=PropertyChanged}"
                                                    Minimum="0" Maximum="10" Width="200" Name="work_duration_rate"/>
                                                </StackPanel>
                                            </GroupBox>
                                        </StackPanel>
                                    </Border>
                                </GroupBox>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </StackPanel>
            </StackPanel>
        </controls:SmoothScrollViewer>

        <StackPanel Orientation="Horizontal" Width="{c:Binding ElementName=LayoutRoot, Path=ActualWidth-20}" Background="White">
            <Button Command="{Binding CancelChangesCommand}" Style="{StaticResource On_Edition_Button}">
                <Image Source="pack://application:,,,/src/imgs/cancel.png"/>
            </Button>
            <Button Command="{Binding SaveChangesCommand}" Style="{StaticResource On_Edition_Button}" >
                <Image Source="pack://application:,,,/src/imgs/accept.png"/>
            </Button>
            <Button Command="{Binding EditCommand}" Style="{StaticResource On_Edition_Button}" >
                <Image Source="pack://application:,,,/src/imgs/pencil.png"/>
            </Button>
            <Button Command="{Binding OpenMainMenuCommand}" >
                <Image Source="pack://application:,,,/src/imgs/back.png"/>
            </Button>
            <Button Command="{Binding RemoveNotebookCommand}" Style="{StaticResource On_Edition_Button}" >
                <Image Source="pack://application:,,,/src/imgs/remove.png"/>
            </Button>
        </StackPanel>

        <StackPanel Width="{Binding ElementName=LayoutRoot, Path=ActualWidth}" Canvas.Top="{c:Binding Path=SpecPos/400}">
            <Image Source="{Binding notebook.image}" Height="{c:Binding Path=40+0.9*(SpecPos*SpecPos/300)}" Width="{c:Binding ElementName=LayoutRoot, Path=ActualWidth*0.7}" HorizontalAlignment="Center">
                <Image.Style>
                    <Style TargetType="Image">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding isEditable}" Value="False">
                                <Setter Property="ContextMenu" Value="{x:Null}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding isEditable}" Value="True">
                                <Setter Property="ContextMenu" Value="{StaticResource image_context_nenu}"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
        </StackPanel>

        <Label Content="specifications" Canvas.Top="{c:Binding SpecPos-10}" Opacity="{c:Binding CommsPos/500}">
            <Label.Style>
                <Style TargetType="Label" BasedOn="{StaticResource label_style}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CommsPos}" Value="0">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Label.Style>
        </Label>
        <Label Content="comments" Style="{StaticResource label_style}" Canvas.Top="{c:Binding CommsPos-10}"/>
    </Canvas>
</UserControl>